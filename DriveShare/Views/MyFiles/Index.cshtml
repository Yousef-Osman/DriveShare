@model IEnumerable<DriveShare.ViewModels.FileDataViewModel>

@{
    ViewData["Title"] = "Index";
    string[] imageList = { "png", "jpg", "jpeg", "gif", "tif", "tiff", "bmp", "ico", "Webp" };
}


<div class="d-flex justify-content-between my-5">
    <h3>My Uploads</h3>
    <a class="btn btn-success" asp-action="UploadFile">Upload File</a>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FileName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ContentType)
            </th>
            <th>Preview</th>
            <th>
                @Html.DisplayNameFor(model => model.Size)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DownloadCount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedOn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastModifiedOn)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FileName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ContentType)
                </td>
                <td>
                    @if (imageList.Contains(item.ContentType))
                    {
                        <img src="/Uploads/@item.FileSerial" width="70" height="70" class="img-thumbnail" alt="@item.FileName" />
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Size)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DownloadCount)
                </td>
                <td>
                    @item.CreatedOn.ToString("dd-MMM-yyyy HH:mm")
                </td>
                <td>
                    @(item.LastModifiedOn.HasValue ? item.LastModifiedOn.Value.ToString("dd-MMM-yyyy HH:mm") : " - ")
                </td>
                <td>
                    @*<a class="btn btn-danger cursor-pointer" onclick="openModal(@item.Id)"><i class="fas fa-trash-alt text-white"></i></a>*@
                    <a class="btn btn-danger cursor-pointer deleteBtn"><i class="fas fa-trash-alt text-white"></i></a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <button class="btn-close align-self-end m-2" data-bs-dismiss="modal"></button>
            <div class="mt-2 mb-4">
                <h4 class="text-center text-danger">Delete File!</h4>
            </div>
            <div style="background-color: #F9F9FB; border-top: 1px solid #eaebed;" class="rounded-bottom">
                <div class="row mb-3 mt-4 justify-content-center">
                    <p class="text-center text-secondary fs-5">are you sure you want to delete this file?</p>
                </div>
                <div class="row mb-5 justify-content-center">
                    <button class="btn btn-danger col-4 me-1" id="confirm-delete-btn">Confirm</button>
                    <button class="btn btn-outline-secondary col-4 ms-1" data-bs-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>
</div>

@*@section scripts{
<script>

    document.addEventListener("DOMContentLoaded", function() {

        document.getElementsByClassName('deleteBtn').addEventListener("click", function(e){
            let fileId = e.value;
            console.log(fileId);
        });

        function openModal(id){
            console.log('working');
            console.log(id);

            document.getElementById('confirm-delete-btn').value = id;
            document.getElementById('deleteModal').modal('show');
        }

        function deleteFile(fileId){
            fetch('/MyFiles/DeleteFile', {
                headers:{'Content-Type': 'application/json'},
                method: 'Delete'
                //credentials: 'Include'
                //body: JSON.stringify({id: fileId})
            }).then(response =>{
                if(! response.ok)
                    alert('something went wrong please try again.');

                return response.json();
            }).then(json =>{
                alert('File Deleted Successfully');
            }).catch(error => {
                alert(error);
            })
        }
    }, false);
</script>
}
*@