@inject IOptions<RequestLocalizationOptions> LocOptions

@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = LocOptions.Value.SupportedUICultures
        .Select(c => new SelectListItem { Value = c.Name, Text = c.TwoLetterISOLanguageName.ToUpper() })
        .ToList();
    var returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
}

<ul class="navbar-nav">
    <li class="nav-item mt-1 me-2">
        @*<div title="@Localizer["Request culture provider:"] @requestCulture?.Provider?.GetType().Name">*@
            <form id="selectLanguage" asp-controller="Home" asp-action="SetLanguage" asp-route-returnUrl="@returnUrl">
                <select class="form-select form-select-sm btn-outline-primary" name="culture" onchange="this.form.submit();"
                        asp-for="@requestCulture.RequestCulture.UICulture.Name" asp-items="cultureItems">
                </select>
            </form>
        @*</div>*@
    </li>
    @if (User.Identity.IsAuthenticated)
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Account" asp-action="Info">@User.Identity.Name</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Account" asp-action="Logout">@Localizer["Logout"]</a>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Account" asp-action="Login">@Localizer["Login"]</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Account" asp-action="Register">@Localizer["Register"]</a>
        </li>
    }
</ul>